// Use CSS variables instead of SCSS variables so we can use them in other files without the need to export/import
:root {
  --contentMaxWidth: 1280px;
  --textCol: #212121;
  --buttonTextCol: #fff;
  --linkCol: #131313;
  --textColDisabled: rgba(255, 255, 255, 0.4);
  --mutedText: rgba(255, 255, 255, 0.7);
  --mutedBlack: rgba(0, 0, 0, 0.1);

  // --primaryCol: #f97565;
  // --secondaryCol: #eb4985;
  // --primaryCol: #00D1CA;
  // --secondaryCol: #C8FFBE;
  // --primaryCol: #29BFDA;
  // --secondaryCol: #B04BBF;

  --primaryCol: #00D1CA;
  --secondaryCol: #C8FFBE;
  --tertiaryCol: #f97565;
  --quaternaryCol: #eb4985;

  --disabledCol: #43687c;
  --gradientCol1: #1c709d;
  --gradientCol2: #761d7d;
  --buttonGradientCol1: #f97565;
  --buttonGradientCol2: #eb4985;
  --s1: 8px;
  --s2: 16px;
  --s3: 24px;
  --s4: 32px;
  --s5: 48px;
  --s6: 64px;
  --s7: 72px;
  --s8: 80px;
  --transitionSpeed: 0.3s;
  --transitionTiming: ease-out;
}

// System font stack
* {
  font-family: 'Lato', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
    'Segoe UI Symbol';
}

// Header styles are inside Header component

html {
  font-size: 112.5%;
} /*18px*/

body {
  color: var(--textCol);
  font-weight: 400;
  line-height: 1.75;
  min-height: 100vh;
}
  
h1, h2, h3, h4, h5 {
  line-height: 1.3;
  margin: 0;
}

h1 {font-size: 3.052rem;}
h2 {font-size: 2.441rem;}
h3 {font-size: 1.953rem;}
h4 {font-size: 1.563rem;}
h5 {font-size: 1.25rem;}
small, .text_small {font-size: 0.8rem;}

// Uncomment for Perfect Fourth Type Scale on larger screens
 @media screen and (min-width: 720px) {
  h1 {font-size: 4.209rem;}
  h2 {font-size: 3.157rem;}
  h3 {font-size: 2.369rem;}
  h4 {font-size: 1.777rem;}
  h5 {font-size: 1.333rem;}
  small, .text_small {font-size: 0.75rem;}
}

#__next {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

// TODO: choose a color that doesn't trigger "auto background color adjust" for anchor tags
::selection {
  background: var(--primaryCol);
}

a {
  color: var(--textCol);
  font-weight: bold;
  transition: all var(--transitionSpeed) var(--transitionTiming);
}

a:not([class]) {
  color: var(--primaryCol);
  text-decoration: none;

  // Fat underline link style:
  // background: linear-gradient(to left, var(--secondaryCol), var(--secondaryCol));
  // background-position: 0 100%;
  // background-size: 100% 0.4em;
  // background-repeat: repeat-x;

  &:hover {
    color: var(--buttonGradientCol1);
  }
}

label {
  display: flex;
  flex-direction: column;
  font-weight: bold;
  margin: 0;
  padding: 0;
}

input {
  border-radius: var(--s1);
  border: 1px solid transparent;
  caret-color: var(--mutedText);
  color: var(--buttonTextCol);
  font-weight: normal;
  margin-bottom: var(--s2);
  margin-top: var(--s1);
  outline: none;
  padding: var(--s1) var(--s3);
  transition: border var(--transitionSpeed) var(--transitionTiming);

  &:hover {
    border: 1px solid var(--secondaryCol);
  }
  &:focus {
    border: 1px solid var(--primaryCol);
  }
}

// https://stackoverflow.com/questions/61083813/how-to-avoid-internal-autofill-selected-style-to-be-applied
input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition: background-color 600000s 0s, color 600000s 0s;
}

::-webkit-calendar-picker-indicator {
  filter: invert(1);
}

input::placeholder {
  color: var(--mutedText);
}

button,
.button {
  background: linear-gradient(
    135deg,
    var(--tertiaryCol),
    var(--quaternaryCol),
    var(--primaryCol),
    var(--secondaryCol)
  );
  background-size: 300% 100%;
  background-position-x: -1px;
  border-radius: 999px;
  border: 1px solid transparent;
  color: var(--buttonTextCol);
  cursor: pointer;
  display: inline-block;
  font-size: 20px;
  font-weight: bold !important;
  line-height: 1.6;
  outline: none;
  padding: var(--s1) var(--s3);
  text-decoration: none;
  transition: all var(--transitionSpeed) var(--transitionTiming);

  &:hover {
    background-position: 100% 0%;
    border: 1px solid #fff;
    color: var(--buttonTextCol);
  }

  &:disabled {
    background: var(--disabledCol);
    color: var(--textColDisabled);
    cursor: default;
  }
}

button.secondary,
.button.secondary {
  background: linear-gradient(
    135deg,
    var(--gradientCol1),
    var(--primaryCol),
    var(--buttonGradientCol1),
    var(--buttonGradientCol2)
  );
  background-size: 300% 100%;

  &:hover {
    background-position: 100% 0%;
  }
}

button.clear,
.button.clear {
  background: linear-gradient(
    135deg,
    var(--mutedBlack),
    var(--mutedBlack),
    var(--buttonGradientCol1),
    var(--buttonGradientCol2)
  );
  background-size: 400% 100%;
  color: var(--mutedText);

  &:hover {
    color: white;
    background-position: 100% 0%;
  }
}

button.clear--secondary,
.button.clear--secondary {
  background: linear-gradient(
    135deg,
    var(--mutedBlack),
    var(--mutedBlack),
    var(--gradientCol1),
    var(--primaryCol)
  );
  background-size: 400% 100%;
  color: var(--mutedText);

  &:hover {
    color: white;
    background-position: 100% 0%;
  }
}

.gradient {
  background: linear-gradient(
    90deg,
    var(--primaryCol) 0%,
    var(--secondaryCol) 100%
  );
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.gradient--secondary {
  background: linear-gradient(
    90deg,
    var(--tertiaryCol) 0%,
    var(--quaternaryCol) 100%
  );
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

