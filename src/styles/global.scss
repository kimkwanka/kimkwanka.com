@use '_iconfont.scss';
@use '_typescale.scss';

// Use CSS variables instead of SCSS variables so we can use them in other files without the need to export/import
:root {
  --contentMaxWidth: 1280px;
  --buttonTextCol: #fff;
  --textColDisabled: rgba(255, 255, 255, 0.38);
  --buttonBGDisabled: #43687c;

  // --primaryCol: #f97565;
  // --secondaryCol: #eb4985;
  // --primaryCol: #00D1CA;
  // --secondaryCol: #C8FFBE;
  // --primaryCol: #29BFDA;
  // --secondaryCol: #B04BBF;

  --backgroundDark: #121212;
   --gradientDark: linear-gradient(#1e1e1e, rgba(0, 0, 0, 0));
  --textL1Dark: rgba(255, 255, 255, 0.87);
  --textL2Dark: rgba(255, 255, 255, 0.6);
  --textL3Dark: rgba(255, 255, 255, 0.38);

  --primaryCol: #00d1ca;
  --secondaryCol: #c8ffbe;
  --tertiaryCol: #f97565;
  --quaternaryCol: #eb4985;
  --accentCol: #f36076;

  --linkUnderlineCol: #00d1ca62;

  --gradientCol1: #1c709d;
  --gradientCol2: #761d7d;
  --buttonGradientCol1: #f97565;
  --buttonGradientCol2: #eb4985;
  --s1: 8px;
  --s2: 16px;
  --s3: 24px;
  --s4: 32px;
  --s5: 48px;
  --s6: 64px;
  --s7: 72px;
  --s8: 80px;
  --s9: 88px;
  --s10: 96px;

  --transitionSpeed: 0.3s;
  --transitionTiming: ease-out;
}

// System font stack
* {
  font-family: 'Lato', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
    'Segoe UI Symbol';
}

body {
  background: var(--backgroundDark);
  color: var(--textL1Dark);
  min-height: 100vh;
}

#__next {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

// TODO: choose a color that doesn't trigger "auto background color adjust" for anchor tags
::selection {
  background: var(--primaryCol);
}

a {
  color: var(--textL1Dark);
  text-decoration: none;
  transition: all var(--transitionSpeed) var(--transitionTiming);
}

a:not([class]) {
  background: linear-gradient(
    135deg,
    var(--tertiaryCol),
    var(--quaternaryCol),
    var(--primaryCol),
    var(--secondaryCol)
  );
  background-size: 400% 100%;
  background-position-x: -1px;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;

  &:hover {
    background-position: 100% 0%;
  }
}

label {
  font-weight: bold;
  margin: 0;
  padding: 0;
}

input,
textarea {
  border-radius: var(--s1);
  border: 1px solid rgba(0, 0, 0, 0.1);
  color: var(--textL1Dark);
  font-weight: normal;
  margin-bottom: var(--s2);
  margin-top: var(--s1);
  outline: none;
  padding: var(--s1) var(--s3);
  transition: all var(--transitionSpeed) var(--transitionTiming);

  &:hover {
    border: 1px solid var(--textL3Dark);
  }
  &:focus {
    border: 1px solid var(--primaryCol);
  }
}

// https://stackoverflow.com/questions/61083813/how-to-avoid-internal-autofill-selected-style-to-be-applied
input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition: background-color 600000s 0s, color 600000s 0s;
}

::-webkit-calendar-picker-indicator {
  filter: invert(1);
}

::placeholder {
  color: rgba(0, 0, 0, 0.3);
}

button,
.button {
  background: linear-gradient(
    135deg,
    var(--tertiaryCol),
    var(--quaternaryCol),
    var(--primaryCol),
    var(--secondaryCol)
  );
  background-size: 400% 100%;
  background-position-x: -1px;
  border-radius: 999px;
  border: 1px solid transparent;
  color: var(--buttonTextCol);
  cursor: pointer;
  display: inline-block;
  font-size: 20px;
  font-weight: bold !important;
  letter-spacing: 0.2em;
  line-height: 1.6;
  outline: none;
  padding: var(--s1) var(--s3);
  text-decoration: none;
  text-transform: uppercase;
  transition: all var(--transitionSpeed) var(--transitionTiming);

  &:hover {
    background-position: 100% 0%;
    border: 1px solid var(--textL1Dark);
    color: rgba(0, 0, 0, 0.87);
  }

  &:disabled {
    background: var(--buttonBGDisabled);
    color: var(--textColDisabled);
    cursor: default;
  }

  span:not([class]) {
    display: inline-block;
  }
}

button.secondary,
.button--secondary {
  background: linear-gradient(
    135deg,
    var(--primaryCol),
    #383838,
    var(--primaryCol),
    var(--secondaryCol)
  );
  background-size: 400% 100%;
  background-position-x: -1px;

  &:hover {
    background-position: 100% 0%;
  }
}

button.clear,
.button--clear {
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 0),
    var(--primaryCol),
    var(--secondaryCol)
  );
  background-size: 400% 100%;
  background-position-x: -1px;
  border: 1px solid var(--textL1Dark);

  &:hover {
    background-position: 100% 0%;
  }
}

// Enable a smooth transition from blurred placeholder to img for next/image
img {
  transition: filter 0.3s linear;
}

// Dim next/image spans to make the <Image /> less bright without breaking placeholder transition
[class*='ImageContainer'] {
  span {
    filter: brightness(0.8) contrast(1.1) !important;
  }
}

.AspectRatioImageContainer {
  height: 0;
  padding-bottom: calc((1 / (16 / 9)) * 100%);
  position: relative !important;
  width: 100% !important;

  img {
    object-fit: cover;
  }
}

.UnboundImageContainer {
  position: relative; // Just to get rid of Next.js warning
  width: 100%;

  > span {
    position: unset !important;
  }

  img {
    height: unset !important;
    position: relative !important;
    width: 100% !important;
  }
}

.gradient {
  background: linear-gradient(
    90deg,
    var(--primaryCol) 0%,
    var(--secondaryCol) 100%
  );
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.gradient--secondary {
  background: linear-gradient(
    90deg,
    var(--tertiaryCol) 0%,
    var(--quaternaryCol) 100%
  );
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.gradient__underline {
  background: linear-gradient(
    to right,
    var(--tertiaryCol),
    var(--quaternaryCol)
  );
  background-position: 0 100%;
  background-size: 100% 4px;
  background-repeat: repeat-x;
}

.gradient__underline--secondary {
  background: linear-gradient(to right, var(--primaryCol), var(--secondaryCol));
  background-position: 0 100%;
  background-size: 100% 4px;
  background-repeat: repeat-x;
}

.hover-gradient {
  background: linear-gradient(
    135deg,
    var(--primaryCol),
    var(--secondaryCol),
    var(--tertiaryCol),
    var(--quaternaryCol)
  );
  background-size: 400% 100%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  transition: all var(--transitionSpeed) var(--transitionTiming);

  &:hover {
    background-position: 100% 0%;
  }
}

.subtitle {
  color: var(--textL2Dark);
  text-transform: uppercase;
  letter-spacing: 0.3em;
}
